name: Build C++ Executable

on:
  push:
    branches: [master, development]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./proj/sitara-websockets.vcxproj

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64

jobs:
  build-executable:
    runs-on: windows-latest

    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.AUTOMATION_SECRET }}
          submodules: recursive

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      # - name: Restore NuGet packages
      #   run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Install packages and dependencies
        run: |
          bootstrap-vcpkg
          vcpkg install --triplet "x64-windows-static" --x-manifest-root .
          vcpkg integrate install

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.SOLUTION_FILE_PATH}}
